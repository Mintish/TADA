{number:1}
{remremoval:on}
	' make level 1 map
	' remember to write # of rooms, data version, level name
	goto {:400}
	' get data
{:300}
	sys ia,40,2:gosub {:check.io_status}:if e then print a$:return
' skip comments:
	if left$(a$,1)="#" then {:300}
	return
{:400}
	a$="":i%=.:dv=peek(186):if dv<8 then sr=8
	dr$="0:":nl$=chr$(.):q$=chr$(34):r$=chr$(13):dim a$(20):open 15,dv,15
	if st=128 then print"Device not present.":goto {:1811}
	l%=.:lv=1:eb=5:for x=1 to eb:d1$=d1$+nl$:next

	gosub {:file.open}("level"+str$(lv)+" data"):if e then print a$:goto {:1811}
	gosub {:300}:mx=val(a$)
	gosub {:300}:df=val(a$)
	gosub {:300}:ln$=a$
	print"{clear}{$08}{$0e}TADA Map Level"lv"Installer v1.0"
	print r$"Level name: "ln$
	print"(Using data format version"str$(df)".)"
	dim d$(mx)
' rm=current room number, lr=last room (for skip compare)
	rm=1:lr=1
	for x=1 to mx
	gosub {:300}:rm=val(a$):goto {:430}
	print"Filling in missing room(s):":for y=lr to rm-1
	d$="EMPTY"+r$+"0,0,0,0"+r$+"0,0,0,0,0,0"+r$+"{up arrow}"+r$
	x=y
	next:goto {:435}
{:430}
' monster, item, weapon, food
' north, east, south, west, room connection, room transport
	input# 2,rn$:input# 2,m,i,w,f:input# 2,n,e,s,w,rc,rt
	d$=rn$+r$+str$(m)+","+str$(i)+","+str$(w)+","+str$(f)+r$
	d$=d$+str$(n)+","+str$(e)+","+str$(s)+","+str$(w)+","
	d$=d$+str$(rc)+","+str$(rt)+r$
{:435}
	gosub {:505}:lr=rm:d$(rm)=d$:next:goto {:1811}
	print fn cl(0):goto {:1811}:if eb=. then {:445}
	print "+"right$("   "+str$(eb),4)" additional data byte";:if eb>1 then print "s";
	print " per record":l%=l%+eb
{:445}
	print"{midline:5}"r$right$("    "+str$(l%),5)" total"r$r$;
	rem tl=56:goto 631
	dr=3:a$="e.t.roomindex"+str$(lv):print# 15,"r"dr$a$"="a$:gosub {:check.io_status}
	close 2:if e=63 then gosub {:900}:if a=.then{:620}:rem 620 was 1811
	x=mx*l%:print x"bytes,";:x%=x/254:print x%"blocks.
	print"Checking blocks free...";:gosub {:1081}:if a>=x% then print" Ok":goto {:475}
	print r$"{up}{rvrs on} BF Warning {rvrs off} - Aborted":goto {:920}
{:475}
	a$="e.t.roomindex"+str$(lv)+",l,"+chr$(l%)
	gosub {:file.open}:rem if e<>50 then print a$:goto 920
	print"Writing highest record...":x=mx:gosub {:record_pointer}:print# 2,chr$(255)
	rem goto 497:rem gosub 1012:stop
	print"Pre-filling file...":for x=1 to mx:gosub {:record_pointer}:print# 2,chr$(255):gosub {:check.io_status}
	print"{up}"tab(27)right$("     "+mid$(str$(x),2),5)" (";
	print mid$(str$(int(x/mx*100)),2)"%)":rem gosub 1012:if e=. then 500
	rem if e<>50 then print a$:stop:x=ro:next:goto 920
	next
	print:print"Creating level"+str$(lv)+" index file...
	print:x=1:gosub {:record_pointer}:print"Writing data...":nl=.:tl=.:x=.
	open 3,sr,3,"level"+str$(lv)+"data,s,r":rem nl=# of lines, tl=total lines
	print:print
	rem --- read room descs ---
{:505}
	print left$(rn$+"                      ",23)" (";
	print right$("  "+str$(rm),3)"/"right$("  "+str$(mx),3)": ";
	print right$("  "+str$(int(rm/mx*100)),3)"%)"
{:509}
	gosub {:300}:if a$="{up arrow}"then{:513}
	print a$;:if len(a$)<>40 then print
	tl=tl+1:gosub {:check.io_status}:if e>20 and e<>50 then z=mx:goto {:665}
	nl=nl+1:goto {:509}
{:513}
	d$=d$+chr$(tl and 255)+chr$(tl/256)+chr$(nl and 255)+chr$(nl/256)
	print"Lines:"tl;tab(13)"In desc:"nl;r$:nl=.
	return
	close 2:close 3:print r$"File successfully created!"
{:620}
	print:print"Creating room description index...
	rem print"Key...";:gosub {:sub.get_keypress}
	a$="":tl=100:lv=1:sr=8:de=9:rem sr=source, de=dest
	open 3,sr,3,"0:s.t.roomdescs"+str$(lv)+",s,r
	open 2,de,2,"0:e.t.roomdescs"+str$(lv)+",l,"+chr$(41):gosub {:check.io_status}
	tl=50
	print"Writing highest record...":x=tl:gosub {:record_pointer}:gosub {:check.io_status}
{ifdef:debug}
	print 635;e$
{endif}
	print# 2,chr$(255):gosub {:check.io_status}:print e$
	rem next
	restore:read z:y=.:x=.
{:641}
	read z,z,z,z,z,z,x$:y=y+1
	print:print x$tab(25)"{$a0}("mid$(str$(y),2)" of "mid$(str$(mx),2)")
	n=.:rem # of lines in desc this pass
{:645}
	sys 49152,40,3:if a$="{up arrow}" then {:641}:rem end of desc block
	print a$:n=n+1:a$(n)=a$:if n>20 then{:655}:rem n=# of lines in buffer
	for n=1 to 20:x=x+1:gosub {:record_pointer}:print# 2,a$(n):gosub {:check.io_status}:if e<>50 then print e$
	next
{:655}
' not read all lines yet:
	if x<>tl then {:645}
{:665}
	print"Done.":close 3:close 2:close 15:end
{:900}
	print "Warning: "e$"... replace? ";:a=.:gosub {:sub.get_keypress}:if a=. then return
	print "Deleting...";:print# 15,"s"dr$"e.t.roomindex"+str$(lv):print:goto {:check.io_status}
{:920}
	close 2:if fl=. then {:1811}
	end

{ifdef:future_expansion}
{number:800}
	rem test two files open at once
	dv=peek(186):if dv<8 then dv=8
	open 15,dv,15:open 2,dv,2,"e.t.roomdescs 1,l,"+chr$(50)
	x=11:gosub {:record_pointer}:print# 2,chr$(255):rem create highest record
	for x=1 to 40:gosub {:record_pointer}:a$="blah"+str$(x)+chr$(13):print# 2,a$:gosub {:check.io_status}:next
	open 3,dv,3,"s.t.roomdescs 1,s,r"
	for y=1 to 40:input# 3,a$:print a$
	x=y:gosub {:record_pointer}:input# 2,a$:print a$
	next:close 2:close 3:end
{:5000}
	rem test reading descs
	open 15,sr,15:open 2,sr,2,"e.t.roomindex 1,l,"+chr$(91)
	x=1:gosub {:record_pointer}:input# 2,a$
	open 15,sr,15:open 2,sr,2,"e.t.roomdescs 1,l,"+chr$(50):gosub {:check.io_status}:x=1:print e$
{:6001}
	gosub {:record_pointer}:input# 2,a$:gosub {:check.io_status}
	if e then print a$:goto {:1811}
	print a$:x=x+1:goto {:6001}
{endif}

{number:998}
'	rem a$="(next file?)":goto 1013
	rem "t.make level 1 map"
	rem copr. 1995-2017 pinacolada

{ifdef:standalone}
' 1001-1002:
{uses:\TADA-svn\pinacolada\TADA\text-listings\includes\rel-pointer.lbl}

{:file.open}
	open 2,dv,2,a$

' 1012:
{uses:\TADA-svn\pinacolada\TADA\text-listings\includes\check-io-status.lbl}

{:1081}
	a=x%:return
{:1811}
	for i=2 to peek(152):close peek(603):next:print"{$09}":end

' 1902:
{uses:\TADA-svn\pinacolada\TADA\text-listings\includes\cursor-get.lbl}

{endif}
