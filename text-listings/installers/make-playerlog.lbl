	{uses:\TADA-svn\pinacolada\TADA\text-listings\includes\label-assignments.lbl}

{number:1}
	rem T.MAKE PLAYERLOG
	goto {:start}

{nice:10}
{:sub.create_player}
	print "Setting up player data...";
	na$="---"
	{uses:\TADA-svn\pinacolada\TADA\text-listings\includes\player-setup.lbl}
	print "Done.":return
	
{nice:100}
{:start}
	f$="e.t.playerlog"
'	:dr$="0:":dv=peek(186):if dv<8 then dv=8
'	open 15,dv,15:nl$=chr$(.):q$=chr$(34):r$=chr$(13)
' find out whether it exists:
{:check_exists}
	print# 15,"r"dr$f$"="f$:gosub {:check.io_status}:close 2:if e<>. or e<>63 then {:create}
{:10}
	print "Warning, "e$". Replace";:a=.:gosub {:sub.yes_no}:if a=. then {:finish}
	print "Scratching...";:print# 15,"s"dr$f$:print:gosub {:check.io_status}
	if e<>1 then print a$:print:print "Retry";:a=1:gosub {:sub.yes_no}:if a then {:check_exists}

{:quit}
	print "Bailing out.":goto {:1811}

{:create}
	gosub {:sub.create_player}
	gosub {:file.open}(f$+",l,"+chr$(240))

' create file
{:850}
	print "Creating "q$f$q$"..."
{ifdef:make_chars}
	read mx
{else}
	mx=10
{endif}
' # of players:
	x=1:gosub {:record_pointer}(1):print# 2,mx
	mx=mx*2+1
	print"Writing highest record... ("mid$(str$(mx),2)")"
	gosub {:record_pointer}(mx):print# 2,chr$(255)
	gosub {:check.io_status}
{:856}
' fill player log with starter data:
	print tab(20)"[ 0/"right$(" "+str$(mx-1),2)

	for z=2 to mx+1 step 2
	x=x+1:gosub {:record_pointer}(x):print# 2,d$::gosub {:check.io_status}
	print"{up}"tab(21)right$(" "+str$(z),2)
	x=x+1:gosub {:record_pointer}(x):print# 2,d2$:gosub {:check.io_status}
	print"{up}"tab(21)right$(" "+str$(z),2)
'	print right$(" "+str$(mx),2)"]"
	next
	print:print "Done."

{ifdef:make_chars}
	print "Generate stock characters? (Y)es/(N)o";:gosub {:sub.yes_no}:if a=. then {:quit}
' pre-made characters:
	gosub {:sub.create_player}
	for z=1 to mx

' step) attribute/information [#_of_bytes]:

' 1) two-byte in-game id# [2]:
	poke v1+1,z and 255:poke v1+2,z/256

' 2) commodoreserver handle [18]:
	read ha$:print ha$:gosub {:sub.string_expand}(ha$,18)
' put handle into d$:
	for i=1 to 18:poke v1+2+i,asc(mid$(x$,i,1)):next

' 3) in-game name [18]:
	read na$:gosub {:sub.string_expand}(na$,18)
' put game name into d$:
	for i=1 to 18:poke v1+,asc(mid$(x$,i,1)):next
	
' 4) gender (v1+64,1) [2]
' set x=0 if female, 1 if male
	read x$:if x$="m" then:gosub {:bit.set}(v1+64,1)

' data format:
' 1) commodoreserver handle
' 2) game name
' 3) gender (m/f)
' 4) str
' 5) dex
' 6) class
' 7) race
' 8) ... profit!
	data 8
' the player log doesn't have a separate field for commodoreserver handles

'		  in-game name												commodoreserver handle
'        |----+----+----+---|,|----+----+----+---| [18 chars max]
	data "RAILBENDER"        ,m,18,12,3,4		' "PINACOLADA"        ,
	data "GOOG"              ,"LARORECTRED"       ,m,1,2,3,4
	data "AGENTFRIDAY"       ,"GALIBAEN"          ,m,1,2,3,4
	data "JWHOAG"            ,"EDERRALDRIC"       ,m,1,2,3,4
	data "RADRICK"           ,"EDILASETH"         ,m,1,2,3,4
	data "MOTATO"            ,"CALIMAR"           ,f,1,2,3,4
	data "ILTU"              ,"AGRENWAN"          ,f,1,2,3,4
	data "MINT"              ,"ALESSA"            ,f,1,2,3,4
{endif}

{number:997}
{:finish}
	print "Reloading "q$"t.startup"q$"..."
	gosub {:link.module}("startup","")
	
'	v1.1  nov  1, 1997  8:26 pm
'	v1.2  feb 10, 2002  1:27 pm
'	v1.3  aug 10, 2003  7:38 am
'	v1.4  oct 22, 2003  1:24 pm
'	v1.5  jul 21, 2006  6:11 pm
'	v1.6  aug 16, 2006 10:01 pm
'	v1.7  aug 25, 2006  1:05 pm
'	v1.8  apr 14, 2007  3:06 pm
'	v1.9  feb 16, 2014 11:32 pm -- improving modularity and re-use of code
'	v1.10 feb 25, 2014 10:40 pm -- started adding generating stock characters
'	v1.11 jul  7, 2015  9:26 pm -- upped record length from 236 to 240
'									put stock char stuff in {define} block
'	v1.12 nov 20, 2015  3:56 pm -- making it more modbasic-like, callable
'									from t.main now
	rem "T.MAKE PLAYERLOG"